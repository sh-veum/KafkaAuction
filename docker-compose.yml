# To also start the sensor
version: "3.0"

networks:
  dev:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.14
    container_name: zookeeper
    networks:
      - dev
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - ./backend/NetBackend/.containers/zookeeper_data:/var/lib/zookeeper/data
      - ./backend/NetBackend/.containers/zookeeper_log:/var/lib/zookeeper/log

  # reachable on 9092 from the host and on kafka:29092 from inside docker compose
  kafka:
    image: confluentinc/cp-kafka:7.0.14
    container_name: kafka
    networks:
      - dev
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_MIN_INSYNC_REPLICAS: "1"
    volumes:
      - ./backend/.containers/kafka-data:/var/lib/kafka/data

  kafkaAuctionBackend:
    image: docker.io/library/netbackend
    depends_on:
      - kafkaAuctionDB
      - kafka
    container_name: kafkaAuctionBackend
    ports:
      - "8088:80"
    build:
      context: ./backend/
      dockerfile: Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=password;Server=kafkaAuctionDB;Database=kafkaAuctionDB;Pooling=true;Port=5432;
      - ASPNETCORE_URLS=http://+:80
    networks:
      - dev

  kafkaAuctionDB:
    image: postgres:latest
    container_name: kafkaAuctionDB
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=kafkaAuctionDB
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - ./backend/.containers/kafkaAuctionDB:/var/lib/postgresql/data
    networks:
      - dev

  # vuefrontend:
  #   image: docker.io/library/vuefrontend
  #   container_name: vuefrontend
  #   build:
  #     context: ./frontend/
  #     dockerfile: Dockerfile
  #     args:
  #       - VITE_VUE_APP_API_URL=http://localhost:8088
  #       - VITE_VUE_APP_API_WEBSOCKET_URL=ws://localhost:8088/ws
  #   ports:
  #     - "8080:80"
  #   depends_on:
  #     - nginx
  #   networks:
  #     - dev

  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx-app
  #   volumes:
  #     - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - 80:80
  #   networks:
  #     - dev

volumes:
  app_data:
